{
  "version": 3,
  "sources": ["../../node_modules/permissionless/utils/deepHexlify.ts", "../../node_modules/permissionless/utils/getEntryPointVersion.ts"],
  "sourcesContent": ["import { toHex } from \"viem\"\n\nexport const transactionReceiptStatus = {\n    \"0x0\": \"reverted\",\n    \"0x1\": \"success\"\n} as const\n\n// biome-ignore lint/suspicious/noExplicitAny: it's a recursive function, so it's hard to type\nexport function deepHexlify(obj: any): any {\n    if (typeof obj === \"function\") {\n        return undefined\n    }\n    if (obj == null || typeof obj === \"string\" || typeof obj === \"boolean\") {\n        return obj\n    }\n\n    if (typeof obj === \"bigint\") {\n        return toHex(obj)\n    }\n\n    if (obj._isBigNumber != null || typeof obj !== \"object\") {\n        return toHex(obj).replace(/^0x0/, \"0x\")\n    }\n    if (Array.isArray(obj)) {\n        return obj.map((member) => deepHexlify(member))\n    }\n    return Object.keys(obj).reduce(\n        // biome-ignore lint/suspicious/noExplicitAny: it's a recursive function, so it's hard to type\n        (set: any, key: string) => {\n            set[key] = deepHexlify(obj[key])\n            return set\n        },\n        {}\n    )\n}\n", "import type {\n    ENTRYPOINT_ADDRESS_V06_TYPE,\n    ENTRYPOINT_ADDRESS_V07_TYPE,\n    UserOperation\n} from \"../types\"\nimport type { EntryPoint, GetEntryPointVersion } from \"../types/entrypoint\"\n\nexport const ENTRYPOINT_ADDRESS_V06: ENTRYPOINT_ADDRESS_V06_TYPE =\n    \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\"\nexport const ENTRYPOINT_ADDRESS_V07: ENTRYPOINT_ADDRESS_V07_TYPE =\n    \"0x0000000071727De22E5E9d8BAf0edAc6f37da032\"\n\nexport const getEntryPointVersion = (\n    entryPoint: EntryPoint\n): GetEntryPointVersion<EntryPoint> =>\n    entryPoint === ENTRYPOINT_ADDRESS_V06 ? \"v0.6\" : \"v0.7\"\n\nexport function isUserOperationVersion06(\n    entryPoint: EntryPoint,\n    _operation: UserOperation<\"v0.6\"> | UserOperation<\"v0.7\">\n): _operation is UserOperation<\"v0.6\"> {\n    return getEntryPointVersion(entryPoint) === \"v0.6\"\n}\n\n// Type predicate to check if the UserOperation is V07.\nexport function isUserOperationVersion07(\n    entryPoint: EntryPoint,\n    _operation: UserOperation<\"v0.6\"> | UserOperation<\"v0.7\">\n): _operation is UserOperation<\"v0.7\"> {\n    return getEntryPointVersion(entryPoint) === \"v0.7\"\n}\n"],
  "mappings": ";;;;;AAEO,IAAM,2BAA2B;EACpC,OAAO;EACP,OAAO;;AAIL,SAAU,YAAY,KAAQ;AAChC,MAAI,OAAO,QAAQ,YAAY;AAC3B,WAAO;EACX;AACA,MAAI,OAAO,QAAQ,OAAO,QAAQ,YAAY,OAAO,QAAQ,WAAW;AACpE,WAAO;EACX;AAEA,MAAI,OAAO,QAAQ,UAAU;AACzB,WAAO,MAAM,GAAG;EACpB;AAEA,MAAI,IAAI,gBAAgB,QAAQ,OAAO,QAAQ,UAAU;AACrD,WAAO,MAAM,GAAG,EAAE,QAAQ,QAAQ,IAAI;EAC1C;AACA,MAAI,MAAM,QAAQ,GAAG,GAAG;AACpB,WAAO,IAAI,IAAI,CAAC,WAAW,YAAY,MAAM,CAAC;EAClD;AACA,SAAO,OAAO,KAAK,GAAG,EAAE;;IAEpB,CAAC,KAAU,QAAe;AACtB,UAAI,GAAG,IAAI,YAAY,IAAI,GAAG,CAAC;AAC/B,aAAO;IACX;IACA,CAAA;EAAE;AAEV;;;AC3BO,IAAM,yBACT;AACG,IAAM,yBACT;AAEG,IAAM,uBAAuB,CAChC,eAEA,eAAe,yBAAyB,SAAS;AAE/C,SAAU,yBACZ,YACA,YAAyD;AAEzD,SAAO,qBAAqB,UAAU,MAAM;AAChD;",
  "names": []
}
